version: '3.7'
services:
  configserver:
    image: configserv:latest
    ports:
      - "8071:8071"
    environment:
#      ENCRYPT_KEY: fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo
      SPRING_PROFILES_ACTIVE: native

    networks:
      backend:
        aliases:
          - "configuration_server"
#  postgres:
#    image: postgres:latest
#    ports:
#      - "5431:5431"
#    environment:
#      POSTGRES_USER: "postgres"
#      POSTGRES_PASSWORD: "postgres"
#      POSTGRES_DB: "ostock_dev"
#      POSTGRES_PORT: 5431
##      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
#    volumes:
#      #first need in docker ui sharing resource folder, for access docker compose
#      - D:\Java\projects\Spring_cloud_LicenseService\src\main\resources\db\migration:/docker-entrypoint-initdb.d/v1.sql
##      - "D:\Java\projects\Spring_cloud_LicenseService\src\main\resources\db\migration":/docker-entrypoint-initdb.d/v2.sql
#    networks:
#      backend:
#        aliases:
#          - "postgres"
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5

networks:
  backend:
    driver: bridge