version: '2.1'
services:
  postgres:
      image: postgres:latest
      ports:
        - "5431:5432"
      environment:
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "postgres"
        POSTGRES_DB: "ostock_dev"
        POSTGRES_PORT: 5432
        POSTGRES_HOST_AUTH_METHOD: trust
      volumes:
        #first need in docker ui sharing resource folder, for access docker compose
#        - D:\Java\projects\Spring_cloud_LicenseService\src\main\resources\int_data_base.sql:/docker-entrypoint-initdb.d/int_data_base.sql
        - D:\Java\projects\Spring_cloud_LicenseService\src\main\resources\db\migration\V0_01__create_licenses.sql:/docker-entrypoint-initdb.d/V0_01__create_licenses.sql
        - D:\Java\projects\Spring_cloud_LicenseService\src\main\resources\db\migration\V0_02__fill_licenses.sql:/docker-entrypoint-initdb.d/V0_02__fill_licenses.sql
      networks:
        backend:
          aliases:
            - "postgres"
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 10s
        timeout: 5s
        retries: 5

  configserver:
    image: configserv:latest
    ports:
      - "8071:8071"
    environment:
      #      ENCRYPT_KEY: fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo
      SPRING_PROFILES_ACTIVE: native

    networks:
      backend:
        aliases:
          - "configuration_server"
#  licensingservice:
#    image: licenseserv:latest
#    environment:
#      PROFILE: "dev"
#      CONFIGSERVER_URI: "http://192.168.0.207:8071"
#      CONFIGSERVER_PORT: "8071"
#      DATABASESERVER_PORT: "5432"
#      ENCRYPT_KEY: "IMSYMMETRIC"
#    depends_on:
#      database:
#        condition: service_healthy
#      configserver:
#        condition: service_started
#    ports:
#      - "8073:8074"
#    networks:
#      - backend
#  organizationservice:
#    image: ostock/organization-service:0.0.1-SNAPSHOT
#    environment:
#      PROFILE: "dev"
#      CONFIGSERVER_URI: "http://configserver:8071"
#      CONFIGSERVER_PORT: "8071"
#      DATABASESERVER_PORT: "5432"
#      ENCRYPT_KEY: "IMSYMMETRIC"
#    depends_on:
#      database:
#        condition: service_healthy
#      configserver:
#        condition: service_started
#    ports:
#      - "8081:8081"
#    networks:
#      - backend

networks:
  backend:
    driver: bridge
